(base) csl-4@csl4-V520-15IKL:~$ mongo --version
MongoDB shell version v3.6.3
git version: 9586e557d54ef70f9ca4b43c26892cd55257e1a5
OpenSSL version: OpenSSL 1.1.1  11 Sep 2018
allocator: tcmalloc
modules: none
build environment:
    distarch: x86_64
    target_arch: x86_64
(base) csl-4@csl4-V520-15IKL:~$ mongosh

Command 'mongosh' not found, did you mean:

  command 'mongos' from deb mongodb-server-core

Try: sudo apt install <deb name>

(base) csl-4@csl4-V520-15IKL:~$ mongo
MongoDB shell version v3.6.3
connecting to: mongodb://127.0.0.1:27017
MongoDB server version: 3.6.3
Server has startup warnings: 
2025-09-02T11:06:53.031+0530 I STORAGE  [initandlisten] 
2025-09-02T11:06:53.031+0530 I STORAGE  [initandlisten] ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine
2025-09-02T11:06:53.031+0530 I STORAGE  [initandlisten] **          See http://dochub.mongodb.org/core/prodnotes-filesystem
2025-09-02T11:06:56.226+0530 I CONTROL  [initandlisten] 
2025-09-02T11:06:56.226+0530 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2025-09-02T11:06:56.226+0530 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2025-09-02T11:06:56.226+0530 I CONTROL  [initandlisten] 
> show db;
2025-09-02T11:29:46.676+0530 E QUERY    [thread1] Error: don't know how to show [db] :
shellHelper.show@src/mongo/shell/utils.js:953:11
shellHelper@src/mongo/shell/utils.js:706:15
@(shellhelp2):1:1
> show collections;
employee
> create database assign8
2025-09-02T11:30:17.275+0530 E QUERY    [thread1] SyntaxError: missing ; before statement @(shell):1:7
> create database assign8;
2025-09-02T11:30:23.139+0530 E QUERY    [thread1] SyntaxError: missing ; before statement @(shell):1:7
> use Assignment8;
switched to db Assignment8
> db.Employees.insertMany(
... ^C

> db.Students.insertMany(
... {RollNo: 1, Name: "Uday", Branch: "Comp"},
... ^C

> db.Students.insertMany(
... {RollNo: 1, Name: "Uday"},
... {RollNo: 2, Name: "Rohit"},
... {RollNo: 3, Name: "Ranvijay"},
... {RollNo: 4, Name: "Gaurav"},
... {RollNo: 5, Name: "Shivam"}
... );
2025-09-02T11:33:39.460+0530 E QUERY    [thread1] TypeError: documents.map is not a function :
DBCollection.prototype.insertMany@src/mongo/shell/crud_api.js:295:1
@(shell):1:1
> db.Students.insertMany(
... [{RollNo: 1, Name: "Uday"},
... {RollNo: 2, Name: "Rohit"},
... {RollNo: 3, Name: "Ranvijay"},
... {RollNo: 4, Name: "Gaurav"},
... {RollNo: 5, Name: "Shivam"}
... ]);
{
	"acknowledged" : true,
	"insertedIds" : [
		ObjectId("68b688f752e7951fdef59304"),
		ObjectId("68b688f752e7951fdef59305"),
		ObjectId("68b688f752e7951fdef59306"),
		ObjectId("68b688f752e7951fdef59307"),
		ObjectId("68b688f752e7951fdef59308")
	]
}
> db.Students.find();
{ "_id" : ObjectId("68b688f752e7951fdef59304"), "RollNo" : 1, "Name" : "Uday" }
{ "_id" : ObjectId("68b688f752e7951fdef59305"), "RollNo" : 2, "Name" : "Rohit" }
{ "_id" : ObjectId("68b688f752e7951fdef59306"), "RollNo" : 3, "Name" : "Ranvijay" }
{ "_id" : ObjectId("68b688f752e7951fdef59307"), "RollNo" : 4, "Name" : "Gaurav" }
{ "_id" : ObjectId("68b688f752e7951fdef59308"), "RollNo" : 5, "Name" : "Shivam" }
> db.Students.find({RollNo: {$ge: 3}});
Error: error: {
	"ok" : 0,
	"errmsg" : "unknown operator: $ge",
	"code" : 2,
	"codeName" : "BadValue"
}
> db.Students.find({RollNo: {$gte: 3}});
{ "_id" : ObjectId("68b688f752e7951fdef59306"), "RollNo" : 3, "Name" : "Ranvijay" }
{ "_id" : ObjectId("68b688f752e7951fdef59307"), "RollNo" : 4, "Name" : "Gaurav" }
{ "_id" : ObjectId("68b688f752e7951fdef59308"), "RollNo" : 5, "Name" : "Shivam" }
> db.Students.updateOne({RollNo:5}, {$set: {RollNo: 10}});
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }
> db.Students.find({}, {_id: 0});
{ "RollNo" : 1, "Name" : "Uday" }
{ "RollNo" : 2, "Name" : "Rohit" }
{ "RollNo" : 3, "Name" : "Ranvijay" }
{ "RollNo" : 4, "Name" : "Gaurav" }
{ "RollNo" : 10, "Name" : "Shivam" }
> db.Students.deleteOne({RollNo: 10});
{ "acknowledged" : true, "deletedCount" : 1 }
> db.Students.find();
{ "_id" : ObjectId("68b688f752e7951fdef59304"), "RollNo" : 1, "Name" : "Uday" }
{ "_id" : ObjectId("68b688f752e7951fdef59305"), "RollNo" : 2, "Name" : "Rohit" }
{ "_id" : ObjectId("68b688f752e7951fdef59306"), "RollNo" : 3, "Name" : "Ranvijay" }
{ "_id" : ObjectId("68b688f752e7951fdef59307"), "RollNo" : 4, "Name" : "Gaurav" }
> db.Students.find({}, {_id: 0});
{ "RollNo" : 1, "Name" : "Uday" }
{ "RollNo" : 2, "Name" : "Rohit" }
{ "RollNo" : 3, "Name" : "Ranvijay" }
{ "RollNo" : 4, "Name" : "Gaurav" }
> db.Students.find({$or: [{RollNo: 1}, {Name: "Gaurav"}]}, {_id: 0});
{ "RollNo" : 1, "Name" : "Uday" }
{ "RollNo" : 4, "Name" : "Gaurav" }
> db.Students.delete();
2025-09-02T11:49:49.452+0530 E QUERY    [thread1] TypeError: db.Students.delete is not a function :
@(shell):1:1
> db.Students.deleteMany();
2025-09-02T11:49:54.412+0530 E QUERY    [thread1] Error: find() requires query criteria :
Bulk/this.find@src/mongo/shell/bulk_api.js:786:1
DBCollection.prototype.deleteMany@src/mongo/shell/crud_api.js:408:20
@(shell):1:1
> db.Students.deleteMany({});
{ "acknowledged" : true, "deletedCount" : 4 }
> db.Students.insertMany([
... {RollNo: 1, Name: "Uday", Branch: "Comp", CGPA: 9.05, City: "Pune"},
... {RollNo: 2, Name: "Mohit", Branch: "IT", CGPA: 9.28, City: "Lucknow"},
... {RollNo: 3, Name: "Rishikesh", Branch: "ENTC", CGPA: 9.15, City: "Patna"},
... {RollNo: 4, Name: "Rohit", Branch: "Comp", CGPA: 9.45, City: "Jammu"},
... {RollNo: 5, Name: "Ram", Branch: "IT", CGPA: 7, City: "Mumbai"},
... {RollNo: 6, Name: "Sita", Branch: "ENTC", CGPA: 8, City: "Mumbai"}
... ]);
{
	"acknowledged" : true,
	"insertedIds" : [
		ObjectId("68b68dce52e7951fdef59309"),
		ObjectId("68b68dce52e7951fdef5930a"),
		ObjectId("68b68dce52e7951fdef5930b"),
		ObjectId("68b68dce52e7951fdef5930c"),
		ObjectId("68b68dce52e7951fdef5930d"),
		ObjectId("68b68dce52e7951fdef5930e")
	]
}
> db.Students.find();
{ "_id" : ObjectId("68b68dce52e7951fdef59309"), "RollNo" : 1, "Name" : "Uday", "Branch" : "Comp", "CGPA" : 9.05, "City" : "Pune" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930a"), "RollNo" : 2, "Name" : "Mohit", "Branch" : "IT", "CGPA" : 9.28, "City" : "Lucknow" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930b"), "RollNo" : 3, "Name" : "Rishikesh", "Branch" : "ENTC", "CGPA" : 9.15, "City" : "Patna" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930c"), "RollNo" : 4, "Name" : "Rohit", "Branch" : "Comp", "CGPA" : 9.45, "City" : "Jammu" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930d"), "RollNo" : 5, "Name" : "Ram", "Branch" : "IT", "CGPA" : 7, "City" : "Mumbai" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930e"), "RollNo" : 6, "Name" : "Sita", "Branch" : "ENTC", "CGPA" : 8, "City" : "Mumbai" }
> db.Students.find({}, {_id: 0});
{ "RollNo" : 1, "Name" : "Uday", "Branch" : "Comp", "CGPA" : 9.05, "City" : "Pune" }
{ "RollNo" : 2, "Name" : "Mohit", "Branch" : "IT", "CGPA" : 9.28, "City" : "Lucknow" }
{ "RollNo" : 3, "Name" : "Rishikesh", "Branch" : "ENTC", "CGPA" : 9.15, "City" : "Patna" }
{ "RollNo" : 4, "Name" : "Rohit", "Branch" : "Comp", "CGPA" : 9.45, "City" : "Jammu" }
{ "RollNo" : 5, "Name" : "Ram", "Branch" : "IT", "CGPA" : 7, "City" : "Mumbai" }
{ "RollNo" : 6, "Name" : "Sita", "Branch" : "ENTC", "CGPA" : 8, "City" : "Mumbai" }
> db.Students.find({}, {_id: 0}).pretty();
{
	"RollNo" : 1,
	"Name" : "Uday",
	"Branch" : "Comp",
	"CGPA" : 9.05,
	"City" : "Pune"
}
{
	"RollNo" : 2,
	"Name" : "Mohit",
	"Branch" : "IT",
	"CGPA" : 9.28,
	"City" : "Lucknow"
}
{
	"RollNo" : 3,
	"Name" : "Rishikesh",
	"Branch" : "ENTC",
	"CGPA" : 9.15,
	"City" : "Patna"
}
{
	"RollNo" : 4,
	"Name" : "Rohit",
	"Branch" : "Comp",
	"CGPA" : 9.45,
	"City" : "Jammu"
}
{
	"RollNo" : 5,
	"Name" : "Ram",
	"Branch" : "IT",
	"CGPA" : 7,
	"City" : "Mumbai"
}
{
	"RollNo" : 6,
	"Name" : "Sita",
	"Branch" : "ENTC",
	"CGPA" : 8,
	"City" : "Mumbai"
}
> db.Students.update({CGPA: {$gte: 9.2}}, {$set: {CGPA: 9}});
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.Students.update({CGPA: {$gte: 9.2}}, {$set: {CGPA: 9}});
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.Students.update({CGPA: {$gte: 9.2}}, {$set: {CGPA: 9}});
WriteResult({ "nMatched" : 0, "nUpserted" : 0, "nModified" : 0 })
> db.Students.updateMany({CGPA: {$and: [{$gte: 8.5}, {$lte: 9.2}]}, {$set: {CGPA: 8}});
... ;
... ^C

> db.Students.updateMany({CGPA: {$and: [{$gte: 8.5}, {$lte: 9.2}]}}, {$set: {CGPA: 8}});
2025-09-02T11:58:22.860+0530 E QUERY    [thread1] WriteError: unknown operator: $and :
WriteError({
	"index" : 0,
	"code" : 2,
	"errmsg" : "unknown operator: $and",
	"op" : {
		"q" : {
			"CGPA" : {
				"$and" : [
					{
						"$gte" : 8.5
					},
					{
						"$lte" : 9.2
					}
				]
			}
		},
		"u" : {
			"$set" : {
				"CGPA" : 8
			}
		},
		"multi" : true,
		"upsert" : false
	}
})
WriteError@src/mongo/shell/bulk_api.js:466:48
Bulk/mergeBatchResults@src/mongo/shell/bulk_api.js:846:49
Bulk/executeBatch@src/mongo/shell/bulk_api.js:910:13
Bulk/this.execute@src/mongo/shell/bulk_api.js:1154:21
DBCollection.prototype.updateMany@src/mongo/shell/crud_api.js:655:17
@(shell):1:1
> db.Students.find();
{ "_id" : ObjectId("68b68dce52e7951fdef59309"), "RollNo" : 1, "Name" : "Uday", "Branch" : "Comp", "CGPA" : 9.05, "City" : "Pune" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930a"), "RollNo" : 2, "Name" : "Mohit", "Branch" : "IT", "CGPA" : 9, "City" : "Lucknow" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930b"), "RollNo" : 3, "Name" : "Rishikesh", "Branch" : "ENTC", "CGPA" : 9.15, "City" : "Patna" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930c"), "RollNo" : 4, "Name" : "Rohit", "Branch" : "Comp", "CGPA" : 9, "City" : "Jammu" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930d"), "RollNo" : 5, "Name" : "Ram", "Branch" : "IT", "CGPA" : 7, "City" : "Mumbai" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930e"), "RollNo" : 6, "Name" : "Sita", "Branch" : "ENTC", "CGPA" : 8, "City" : "Mumbai" }
> db.Students.find({CGPA: {$gte: 9}}, {$set: {CGPA: 8}});
Error: error: {
	"ok" : 0,
	"errmsg" : "Unsupported projection option: $set: { CGPA: 8.0 }",
	"code" : 2,
	"codeName" : "BadValue"
}
> db.Students.updateMany({CGPA: {$gte: 9}}, {$set: {CGPA: 8}});
{ "acknowledged" : true, "matchedCount" : 4, "modifiedCount" : 4 }
> db.Students.find();
{ "_id" : ObjectId("68b68dce52e7951fdef59309"), "RollNo" : 1, "Name" : "Uday", "Branch" : "Comp", "CGPA" : 8, "City" : "Pune" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930a"), "RollNo" : 2, "Name" : "Mohit", "Branch" : "IT", "CGPA" : 8, "City" : "Lucknow" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930b"), "RollNo" : 3, "Name" : "Rishikesh", "Branch" : "ENTC", "CGPA" : 8, "City" : "Patna" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930c"), "RollNo" : 4, "Name" : "Rohit", "Branch" : "Comp", "CGPA" : 8, "City" : "Jammu" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930d"), "RollNo" : 5, "Name" : "Ram", "Branch" : "IT", "CGPA" : 7, "City" : "Mumbai" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930e"), "RollNo" : 6, "Name" : "Sita", "Branch" : "ENTC", "CGPA" : 8, "City" : "Mumbai" }
> db.Students.updateMany({RollNo: {$in: [2,4]}}, {$set: {CGPA: 9}});
{ "acknowledged" : true, "matchedCount" : 2, "modifiedCount" : 2 }
> db.Students.find({}, {_id: 0});
{ "RollNo" : 1, "Name" : "Uday", "Branch" : "Comp", "CGPA" : 8, "City" : "Pune" }
{ "RollNo" : 2, "Name" : "Mohit", "Branch" : "IT", "CGPA" : 9, "City" : "Lucknow" }
{ "RollNo" : 3, "Name" : "Rishikesh", "Branch" : "ENTC", "CGPA" : 8, "City" : "Patna" }
{ "RollNo" : 4, "Name" : "Rohit", "Branch" : "Comp", "CGPA" : 9, "City" : "Jammu" }
{ "RollNo" : 5, "Name" : "Ram", "Branch" : "IT", "CGPA" : 7, "City" : "Mumbai" }
{ "RollNo" : 6, "Name" : "Sita", "Branch" : "ENTC", "CGPA" : 8, "City" : "Mumbai" }
> ^C
bye
(base) csl-4@csl4-V520-15IKL:~$ cd Desktop/Uday-7360/Assign8/
(base) csl-4@csl4-V520-15IKL:~/Desktop/Uday-7360/Assign8$ script log-8.txt
Script started, file is log-8.txt
script: cannot open log-8.txt: Permission denied
(base) csl-4@csl4-V520-15IKL:~/Desktop/Uday-7360/Assign8$ cd ..
(base) csl-4@csl4-V520-15IKL:~/Desktop/Uday-7360$ script log-8.txt
Script started, file is log-8.txt
(base) csl-4@csl4-V520-15IKL:~/Desktop/Uday-7360$ mongo
MongoDB shell version v3.6.3
connecting to: mongodb://127.0.0.1:27017
MongoDB server version: 3.6.3
Server has startup warnings: 
2025-09-02T11:06:53.031+0530 I STORAGE  [initandlisten] 
2025-09-02T11:06:53.031+0530 I STORAGE  [initandlisten] ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine
2025-09-02T11:06:53.031+0530 I STORAGE  [initandlisten] **          See http://dochub.mongodb.org/core/prodnotes-filesystem
2025-09-02T11:06:56.226+0530 I CONTROL  [initandlisten] 
2025-09-02T11:06:56.226+0530 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2025-09-02T11:06:56.226+0530 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2025-09-02T11:06:56.226+0530 I CONTROL  [initandlisten] 
> use Assign8;
switched to db Assign8
> db.Students.find();
> show collections;
> ^C
bye
(base) csl-4@csl4-V520-15IKL:~/Desktop/Uday-7360$ mongo
MongoDB shell version v3.6.3
connecting to: mongodb://127.0.0.1:27017
MongoDB server version: 3.6.3
Server has startup warnings: 
2025-09-02T11:06:53.031+0530 I STORAGE  [initandlisten] 
2025-09-02T11:06:53.031+0530 I STORAGE  [initandlisten] ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine
2025-09-02T11:06:53.031+0530 I STORAGE  [initandlisten] **          See http://dochub.mongodb.org/core/prodnotes-filesystem
2025-09-02T11:06:56.226+0530 I CONTROL  [initandlisten] 
2025-09-02T11:06:56.226+0530 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2025-09-02T11:06:56.226+0530 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2025-09-02T11:06:56.226+0530 I CONTROL  [initandlisten] 
> show databases;
Assignment8  0.000GB
admin        0.000GB
bank         0.000GB
chauhan      0.000GB
config       0.000GB
emdb         0.000GB
local        0.000GB
pracDB       0.000GB
saurabh      0.000GB
temp         0.000GB
test         0.000GB
> use Assignment8;
switched to db Assignment8
> db.Students.find();
{ "_id" : ObjectId("68b68dce52e7951fdef59309"), "RollNo" : 1, "Name" : "Uday", "Branch" : "Comp", "CGPA" : 8, "City" : "Pune" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930a"), "RollNo" : 2, "Name" : "Mohit", "Branch" : "IT", "CGPA" : 9, "City" : "Lucknow" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930b"), "RollNo" : 3, "Name" : "Rishikesh", "Branch" : "ENTC", "CGPA" : 8, "City" : "Patna" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930c"), "RollNo" : 4, "Name" : "Rohit", "Branch" : "Comp", "CGPA" : 9, "City" : "Jammu" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930d"), "RollNo" : 5, "Name" : "Ram", "Branch" : "IT", "CGPA" : 7, "City" : "Mumbai" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930e"), "RollNo" : 6, "Name" : "Sita", "Branch" : "ENTC", "CGPA" : 8, "City" : "Mumbai" }
> db.Students.updateOne({Name: "Ram", CGPA: 8});
2025-09-02T12:06:40.868+0530 E QUERY    [thread1] TypeError: can't convert undefined to object :
DBCollection.prototype.updateOne@src/mongo/shell/crud_api.js:535:16
@(shell):1:1
> db.Students.updateOne({Name: "Ram"}, {$set: {CGPA: 8}});
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }
> db.Students.updateOne({Name: "Sita"}, {$set: {CGPA: 7}});
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }
> db.Students.find();
{ "_id" : ObjectId("68b68dce52e7951fdef59309"), "RollNo" : 1, "Name" : "Uday", "Branch" : "Comp", "CGPA" : 8, "City" : "Pune" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930a"), "RollNo" : 2, "Name" : "Mohit", "Branch" : "IT", "CGPA" : 9, "City" : "Lucknow" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930b"), "RollNo" : 3, "Name" : "Rishikesh", "Branch" : "ENTC", "CGPA" : 8, "City" : "Patna" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930c"), "RollNo" : 4, "Name" : "Rohit", "Branch" : "Comp", "CGPA" : 9, "City" : "Jammu" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930d"), "RollNo" : 5, "Name" : "Ram", "Branch" : "IT", "CGPA" : 8, "City" : "Mumbai" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930e"), "RollNo" : 6, "Name" : "Sita", "Branch" : "ENTC", "CGPA" : 7, "City" : "Mumbai" }
> db.Students.find({$or: [{CGPA: 9}, {Branch: "Comp"}]});
{ "_id" : ObjectId("68b68dce52e7951fdef59309"), "RollNo" : 1, "Name" : "Uday", "Branch" : "Comp", "CGPA" : 8, "City" : "Pune" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930a"), "RollNo" : 2, "Name" : "Mohit", "Branch" : "IT", "CGPA" : 9, "City" : "Lucknow" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930c"), "RollNo" : 4, "Name" : "Rohit", "Branch" : "Comp", "CGPA" : 9, "City" : "Jammu" }
> db.Students.find({$not: {Branch: "IT"}});
Error: error: {
	"ok" : 0,
	"errmsg" : "unknown top level operator: $not",
	"code" : 2,
	"codeName" : "BadValue"
}
> db.Students.find({Branch: {$not: "IT"}});
Error: error: {
	"ok" : 0,
	"errmsg" : "$not needs a regex or a document",
	"code" : 2,
	"codeName" : "BadValue"
}
> db.Students.find({Branch: {$ne: "IT"}});
{ "_id" : ObjectId("68b68dce52e7951fdef59309"), "RollNo" : 1, "Name" : "Uday", "Branch" : "Comp", "CGPA" : 8, "City" : "Pune" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930b"), "RollNo" : 3, "Name" : "Rishikesh", "Branch" : "ENTC", "CGPA" : 8, "City" : "Patna" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930c"), "RollNo" : 4, "Name" : "Rohit", "Branch" : "Comp", "CGPA" : 9, "City" : "Jammu" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930e"), "RollNo" : 6, "Name" : "Sita", "Branch" : "ENTC", "CGPA" : 7, "City" : "Mumbai" }
> db.Students.find({$and: [{CGPA: 7}, {City: "Mumbai"}]});
{ "_id" : ObjectId("68b68dce52e7951fdef5930e"), "RollNo" : 6, "Name" : "Sita", "Branch" : "ENTC", "CGPA" : 7, "City" : "Mumbai" }
> db.Students.find({$or: [{CGPA: {$ne: 9}}, {Branch: "Comp"}]});
{ "_id" : ObjectId("68b68dce52e7951fdef59309"), "RollNo" : 1, "Name" : "Uday", "Branch" : "Comp", "CGPA" : 8, "City" : "Pune" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930b"), "RollNo" : 3, "Name" : "Rishikesh", "Branch" : "ENTC", "CGPA" : 8, "City" : "Patna" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930c"), "RollNo" : 4, "Name" : "Rohit", "Branch" : "Comp", "CGPA" : 9, "City" : "Jammu" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930d"), "RollNo" : 5, "Name" : "Ram", "Branch" : "IT", "CGPA" : 8, "City" : "Mumbai" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930e"), "RollNo" : 6, "Name" : "Sita", "Branch" : "ENTC", "CGPA" : 7, "City" : "Mumbai" }
> db.Students.save({RollNo: 7, Name: "Shreyash", Branch: "Comp", CGPA: 9.5, City: "Bhopal"});
WriteResult({ "nInserted" : 1 })
> db.Students.find();
{ "_id" : ObjectId("68b68dce52e7951fdef59309"), "RollNo" : 1, "Name" : "Uday", "Branch" : "Comp", "CGPA" : 8, "City" : "Pune" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930a"), "RollNo" : 2, "Name" : "Mohit", "Branch" : "IT", "CGPA" : 9, "City" : "Lucknow" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930b"), "RollNo" : 3, "Name" : "Rishikesh", "Branch" : "ENTC", "CGPA" : 8, "City" : "Patna" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930c"), "RollNo" : 4, "Name" : "Rohit", "Branch" : "Comp", "CGPA" : 9, "City" : "Jammu" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930d"), "RollNo" : 5, "Name" : "Ram", "Branch" : "IT", "CGPA" : 8, "City" : "Mumbai" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930e"), "RollNo" : 6, "Name" : "Sita", "Branch" : "ENTC", "CGPA" : 7, "City" : "Mumbai" }
{ "_id" : ObjectId("68b69238f67421d0f569e455"), "RollNo" : 7, "Name" : "Shreyash", "Branch" : "Comp", "CGPA" : 9.5, "City" : "Bhopal" }
> db.Students.deleteOne({Name: "Sita"});
{ "acknowledged" : true, "deletedCount" : 1 }
> db.Students.find();
{ "_id" : ObjectId("68b68dce52e7951fdef59309"), "RollNo" : 1, "Name" : "Uday", "Branch" : "Comp", "CGPA" : 8, "City" : "Pune" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930a"), "RollNo" : 2, "Name" : "Mohit", "Branch" : "IT", "CGPA" : 9, "City" : "Lucknow" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930b"), "RollNo" : 3, "Name" : "Rishikesh", "Branch" : "ENTC", "CGPA" : 8, "City" : "Patna" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930c"), "RollNo" : 4, "Name" : "Rohit", "Branch" : "Comp", "CGPA" : 9, "City" : "Jammu" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930d"), "RollNo" : 5, "Name" : "Ram", "Branch" : "IT", "CGPA" : 8, "City" : "Mumbai" }
{ "_id" : ObjectId("68b69238f67421d0f569e455"), "RollNo" : 7, "Name" : "Shreyash", "Branch" : "Comp", "CGPA" : 9.5, "City" : "Bhopal" }
> db.Students.find({Branch: "Comp"}).sort({score: -1}).limit(1);
{ "_id" : ObjectId("68b68dce52e7951fdef59309"), "RollNo" : 1, "Name" : "Uday", "Branch" : "Comp", "CGPA" : 8, "City" : "Pune" }
> db.Students.find({Branch: "Comp"}).sort({score: 1}).limit(1);
{ "_id" : ObjectId("68b68dce52e7951fdef59309"), "RollNo" : 1, "Name" : "Uday", "Branch" : "Comp", "CGPA" : 8, "City" : "Pune" }
> db.Students.find({Branch: "Comp"}).sort({score: 1}).limit(3);
{ "_id" : ObjectId("68b68dce52e7951fdef59309"), "RollNo" : 1, "Name" : "Uday", "Branch" : "Comp", "CGPA" : 8, "City" : "Pune" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930c"), "RollNo" : 4, "Name" : "Rohit", "Branch" : "Comp", "CGPA" : 9, "City" : "Jammu" }
{ "_id" : ObjectId("68b69238f67421d0f569e455"), "RollNo" : 7, "Name" : "Shreyash", "Branch" : "Comp", "CGPA" : 9.5, "City" : "Bhopal" }
> db.Students.find({Branch: "Comp"}).sort({score: -1}).limit(3);
{ "_id" : ObjectId("68b68dce52e7951fdef59309"), "RollNo" : 1, "Name" : "Uday", "Branch" : "Comp", "CGPA" : 8, "City" : "Pune" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930c"), "RollNo" : 4, "Name" : "Rohit", "Branch" : "Comp", "CGPA" : 9, "City" : "Jammu" }
{ "_id" : ObjectId("68b69238f67421d0f569e455"), "RollNo" : 7, "Name" : "Shreyash", "Branch" : "Comp", "CGPA" : 9.5, "City" : "Bhopal" }
> db.Students.find({Branch: "Comp"}).sort({CGPA: -1}).limit(3);
{ "_id" : ObjectId("68b69238f67421d0f569e455"), "RollNo" : 7, "Name" : "Shreyash", "Branch" : "Comp", "CGPA" : 9.5, "City" : "Bhopal" }
{ "_id" : ObjectId("68b68dce52e7951fdef5930c"), "RollNo" : 4, "Name" : "Rohit", "Branch" : "Comp", "CGPA" : 9, "City" : "Jammu" }
{ "_id" : ObjectId("68b68dce52e7951fdef59309"), "RollNo" : 1, "Name" : "Uday", "Branch" : "Comp", "CGPA" : 8, "City" : "Pune" }
> db.Students.find({Branch: "Comp"}).sort({CGPA: -1}).limit(1);
{ "_id" : ObjectId("68b69238f67421d0f569e455"), "RollNo" : 7, "Name" : "Shreyash", "Branch" : "Comp", "CGPA" : 9.5, "City" : "Bhopal" }
> ^C
bye
(base) csl-4@csl4-V520-15IKL:~/Desktop/Uday-7360$ ^C
(base) csl-4@csl4-V520-15IKL:~/Desktop/Uday-7360$ ^C
(base) csl-4@csl4-V520-15IKL:~/Desktop/Uday-7360$ 

